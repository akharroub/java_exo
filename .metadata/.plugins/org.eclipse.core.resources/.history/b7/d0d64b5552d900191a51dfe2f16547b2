package calc;

import java.io.ObjectInputStream.GetField;
import java.util.Arrays;
import java.util.Comparator;
import java.util.List;
import java.util.OptionalInt;
import java.util.stream.Collectors;
import java.util.stream.Stream;

public class CalculatriceTableauStream {

	

	public static int sommeElements(int[] tabInt) {
		return Arrays.stream(tabInt).sum();
	}

	public static int[] mettreZeroDansLesCasesAIndicesImpair(int[] tab) {
		// TODO Auto-generated method stub
		return null;
	}

	public static OptionalInt plusPetitElement(int[] tabInt) {
		return Arrays.stream(tabInt).min();
	}

	public static OptionalInt plusGrandElement(int[] tabInt) {
		return Arrays.stream(tabInt).max();
	}

	public static long sommeElementsDeuxTableaux(int[] tabInt, int[] tabInt2) {
//		Stream.concat(Arrays.stream(tabInt).mapToObj(Integer::valueOf), Arrays.stream(tabInt2).mapToObj(Integer::valueOf)).mapToInt(Integer::intValue).sum();
		return Arrays.stream(tabInt).sum()+Arrays.stream(tabInt2).sum();
	}

	public static int[] triAscendant(int[] tabInt) {
		return Arrays.stream(tabInt).sorted().toArray();
	}

}
